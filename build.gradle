import org.asciidoctor.gradle.jvm.AsciidoctorTask

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    }
}

plugins {
    id 'org.asciidoctor.jvm.convert' version '4.0.3'
    id 'java-library'
}

version project.projectVersion
group 'org.grails.plugins'

apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.grails-gsp'
apply plugin: "org.grails.grails-publish"

compileJava.options.release = 17

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compileOnly 'org.springframework.boot:spring-boot-starter-logging'
    compileOnly "org.springframework.boot:spring-boot-starter-actuator"
    compileOnly "org.springframework.boot:spring-boot-autoconfigure"
    compileOnly "org.springframework.boot:spring-boot-starter-tomcat"
    compileOnly "org.grails:grails-plugin-controllers"
    compileOnly "org.grails.plugins:gsp:${grailsVersion}"

    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails:grails-gorm-testing-support"

    testImplementation 'org.javassist:javassist:3.29.0-GA'
    testImplementation "org.apache.groovy:groovy-dateutil"
    testImplementation("org.jodd:jodd-wot:$joddWotVersion") {
        exclude module: 'slf4j-api'
        exclude module: 'asm'
    }

    testRuntimeOnly "net.bytebuddy:byte-buddy:$byteBuddyVersion"

    testImplementation "org.grails:grails-datastore-gorm-hibernate5:$gormHibernate5Version"
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

grailsPublish {
    githubSlug = 'gpc/fields'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Fields Plugin"
    desc = "Customizable form-field rendering based on overrideable GSP template"
    developers = [robfletcher: 'Rob Fletcher', graemerocher: "Graeme Rocher", sdelamo: "Sergio del Amo", sbglasius: 'SÃ¸ren Berg Glasius']
}

tasks.named('asciidoctor', AsciidoctorTask) { it ->
    it.dependsOn(tasks.withType(Groovydoc))
    it.jvm {
        jvmArgs("--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED", "--add-opens", "java.base/java.io=ALL-UNNAMED")
    }

    resources {
        from('src/docs/images')
        into "./images"
    }
    sources {
        include 'index.adoc'
    }
    attributes 'experimental': 'true',
            'compat-mode': 'true',
            'toc': 'left',
            'icons': 'font',
            'version': project.projectVersion,
            'sourcedir': 'src/main/groovy'
    baseDirFollowsSourceDir()
    outputDir = "${buildDir}/docs"
}

groovydoc {
    includeAuthor = false
    includeMainForScripts = true
    processScripts = true
    destinationDir = file("${rootProject.buildDir}/docs/api")
}

tasks.register('docs') {
    group = JavaBasePlugin.DOCUMENTATION_GROUP
    dependsOn = ['groovydoc', 'asciidoctor']
}